/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* _bulidTree(vector<int>& preorder,vector<int>& inorder,int& previ,int inbegin,int inend)
    {
        TreeNode* root = new TreeNode(preorder[previ]);
        int ini = inbegin;
        while(ini<=inend)
        {
            if(inorder[ini] == root->val)
                break;
            else
                ini++;
        }
        root->left = _bulidTree(preorder,inorder,previ,inbegin,ini-1);
        root->right = _bulidTree(preorder,inorder,previ,ini+1,inend);
        return root;
    }

    // 前序创建树,中序分割左右子树
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int i = 0;
        return _bulidTree(preorder,inorder,i,0,inorder.size()-1);
    }
};
